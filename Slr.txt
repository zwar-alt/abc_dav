import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# =====================
# 1. SIMPLE LINEAR REGRESSION (SLR)
# =====================
def simple_linear_regression(X, y):
    n = len(X)
    X_mean = np.mean(X)
    y_mean = np.mean(y)

    numerator = np.sum((X - X_mean) * (y - y_mean))
    denominator = np.sum((X - X_mean)**2)
    m = numerator / denominator
    c = y_mean - m * X_mean
    return m, c

def predict_slr(X, m, c):
    return m * X + c

# Sample Data for SLR
X_slr = np.array([1, 2, 3, 4, 5])
y_slr = np.array([2, 4, 5, 4, 5])

# Train
m, c = simple_linear_regression(X_slr, y_slr)

# Predict
y_pred_slr = predict_slr(X_slr, m, c)

# Plot
plt.figure(figsize=(8,5))
plt.scatter(X_slr, y_slr, color="blue", label="Actual Points")
plt.plot(X_slr, y_pred_slr, color="red", label=f"Regression Line: y = {m:.2f}x + {c:.2f}")
plt.title("Simple Linear Regression")
plt.xlabel("X")
plt.ylabel("y")
plt.legend()
plt.grid()
plt.show()
